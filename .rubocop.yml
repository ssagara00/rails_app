require:
  - rubocop-rails
  - rubocop-rspec

AllCops:
  # 最新のルールを適用する
  NewCops: enable
  # 何のルールに引っかかったか表示する
  DisplayCopNames: true
  # rubocop対象外(リポジトリ毎で調節)
  Exclude:
    - 'config.ru'
    - 'Gemfile'
    - 'bin/*'
    - 'config/**/*'
    - 'db/**/*'
    - 'log/**/*'
    - 'node_modules/**/*'
    - 'public/**/*'
    - 'react/**/*'
    - 'test/**/*'
    - 'tmp/**/*'
    - 'vendor/**/*'
    - !ruby/regexp /old_and_unused\.rb$/

### ルールのカスタマイズ

# 設定が厳しいので一旦全てfalseにする
Metrics:
  Enabled: false

# 一行あたりの文字数
Layout/LineLength:
  Enabled: false

# メソッドの改行ルール
Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented

# 日本語にコメントを許可
Style/AsciiComments:
  Enabled: false

# クラスにコメントを残さなくても良い
Style/Documentation:
  Enabled: false

# コントローラ等のモジュールをネストしての宣言
Style/ClassAndModuleChildren:
  Enabled: false

# 文字列のfreeze（Ruby3からは自動でfreezeされるので要らない）
Style/FrozenStringLiteralComment:
  Enabled: false

# ガード節の提案（難しいので一旦false）
Style/GuardClause:
  Enabled: false

# シンボルによる配列の%記法のチェック
Style/SymbolArray:
  Enabled: false
  # EnforcedStyle: brackets

# 文字列による配列の%記法のチェック
Style/WordArray:
  Enabled: false

# 変数名に数字を許可
Naming/VariableNumber:
  Enabled: false

# メソッド名等の命名の指摘
Naming/PredicateName:
  Enabled: false

# メソッド名等のキャメルケース使用許容
Naming/MethodName:
  Enabled: false

# 未使用の変数を許容
Lint/UselessAssignment:
  Enabled: false

# 未i18nのチェック（バリデーションエラーメッセージをi18nに登録するのはやや冗長？なためfalse）
Rails/I18nLocaleTexts:
  Enabled: false

# 結果の書き方を許容
RSpec/BeEq:
  Enabled: false

# 英語を前提としたcontextの説明文の制限を無効化する
RSpec/ContextWording:
  Enabled: false

# テストが失敗するため｀OFFにした。
Rails/InverseOf:
  Enabled: false

# before_actionの際の未定義メソッドのチェック（deviseとの兼ね合いで一旦false）
Rails/LexicallyScopedActionFilter:
  Enabled: false

# 1つのテストケースあたりの行数
RSpec/ExampleLength:
  Enabled: false

# expectの書き方を許容
RSpec/ExpectActual:
  Enabled: false

RSpec/IdenticalEqualityAssertion:
  Enabled: false  

# モックを用いた検証で、`receive`と`have_received`の両方を許容する
RSpec/MessageSpies:
  Enabled: false

# 1つのテストケースあたりのアサーションの数
RSpec/MultipleExpectations:
  Enabled: false

# letの定義回数の上限
RSpec/MultipleMemoizedHelpers:
  Enabled: false

# subject使用を許容
RSpec/NamedSubject:
  Enabled: false

# ネストの深さ
RSpec/NestedGroups:
  Enabled: false

# HTTPstatusの書き方
RSpec/Rails/HaveHttpStatus:
  Enabled: false

Rails:
  Enabled: true