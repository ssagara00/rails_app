# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  ruby: circleci/ruby@2.0.0
  node: circleci/node@5.1.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    docker:
      - image: cimg/ruby:3.1.1-node
      - image: cimg/node:19.6.0
    steps:
      - checkout
      - ruby/install-deps

  test:
      parallelism: 3
      docker:
        - image: cimg/ruby:3.1.1-node
          environment:
            BUNDLE_JOBS: 3
            BUNDLE_RETRY: 3
            RAILS_ENV: 'test'
            MYSQL_HOST: 'db'
            MYSQL_USER: 'appuser'
            MYSQL_PASSWORD: 'appuser'
            MYSQL_PORT: 3306
        - image: cimg/mysql:8.0
          environment:
            MYSQL_USER: 'appuser'
            MYSQL_PASSWORD: 'appuser'
            MYSQL_ROOT_PASSWORD: 'root'
            MYSQL_DATABASE: 'myapp_test'
            MYSQL_HOST: 'db'
          name: db
      steps:
        - checkout
        - ruby/install-deps
        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "Gemfile.lock" }}
              - v1-dependencies-
        - run:
            name: install gems
            command:
              bundle install
        - save_cache:
            paths:
              - ./vendor/bundle
            key: v1-dependencies-{{ checksum "Gemfile.lock" }}
        - run: bundle exec rake db:create db:migrate
        - run:
            name: Database setup
            command: bundle exec rails db:schema:load --trace
        - run:
            name: run rspec
            command:
              bundle exec rspec

  front-test:
    docker:
      - image: cimg/node:19.6.0
        environment:
          NODE_ENV: test
    working_directory: ~/rails-app
    steps:
      - checkout
      - restore_cache:
          working_directory: react/react-app
          keys:
            - v1-dependencies-{{ checksum "react/react-app/yarn.lock" }}
      - run:
          working_directory: react/react-app
          name: install-yarn
          command: yarn install --frozen-lockfile
      - save_cache:
          working_directory: react/react-app
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "react/react-app/yarn.lock" }}
      - run:
          working_directory: react/react-app
          name: run jest
          command: yarn jest-test
          

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  version: 2
  build_test_deploy: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build
      - test:
          requires:
            - build
      - front-test
